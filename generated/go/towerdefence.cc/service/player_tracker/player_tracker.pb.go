// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: service/player_tracker.proto

package player_tracker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	model "towerdefence.cc/model"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	ServerId   string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *PlayerLoginRequest) Reset() {
	*x = PlayerLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginRequest) ProtoMessage() {}

func (x *PlayerLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginRequest.ProtoReflect.Descriptor instead.
func (*PlayerLoginRequest) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerLoginRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerLoginRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerLoginRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type PlayerDisconnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *PlayerDisconnectRequest) Reset() {
	*x = PlayerDisconnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDisconnectRequest) ProtoMessage() {}

func (x *PlayerDisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDisconnectRequest.ProtoReflect.Descriptor instead.
func (*PlayerDisconnectRequest) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerDisconnectRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerDisconnectRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetPlayerServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *OnlineServer `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
}

func (x *GetPlayerServerResponse) Reset() {
	*x = GetPlayerServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerServerResponse) ProtoMessage() {}

func (x *GetPlayerServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerServerResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerServerResponse) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlayerServerResponse) GetServer() *OnlineServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type GetPlayerServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerServers map[string]*OnlineServer `protobuf:"bytes,1,rep,name=player_servers,json=playerServers,proto3" json:"player_servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Is they are not online, they will not be included in the map.
}

func (x *GetPlayerServersResponse) Reset() {
	*x = GetPlayerServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerServersResponse) ProtoMessage() {}

func (x *GetPlayerServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerServersResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerServersResponse) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlayerServersResponse) GetPlayerServers() map[string]*OnlineServer {
	if x != nil {
		return x.PlayerServers
	}
	return nil
}

type ServerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *ServerIdRequest) Reset() {
	*x = ServerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerIdRequest) ProtoMessage() {}

func (x *ServerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerIdRequest.ProtoReflect.Descriptor instead.
func (*ServerIdRequest) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{4}
}

func (x *ServerIdRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetServerPlayerCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerCount int32 `protobuf:"varint,1,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
}

func (x *GetServerPlayerCountResponse) Reset() {
	*x = GetServerPlayerCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerPlayerCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerPlayerCountResponse) ProtoMessage() {}

func (x *GetServerPlayerCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerPlayerCountResponse.ProtoReflect.Descriptor instead.
func (*GetServerPlayerCountResponse) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{5}
}

func (x *GetServerPlayerCountResponse) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

type GetServerPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlinePlayers []*OnlinePlayer `protobuf:"bytes,1,rep,name=online_players,json=onlinePlayers,proto3" json:"online_players,omitempty"`
}

func (x *GetServerPlayersResponse) Reset() {
	*x = GetServerPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerPlayersResponse) ProtoMessage() {}

func (x *GetServerPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerPlayersResponse.ProtoReflect.Descriptor instead.
func (*GetServerPlayersResponse) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{6}
}

func (x *GetServerPlayersResponse) GetOnlinePlayers() []*OnlinePlayer {
	if x != nil {
		return x.OnlinePlayers
	}
	return nil
}

type OnlinePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *OnlinePlayer) Reset() {
	*x = OnlinePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePlayer) ProtoMessage() {}

func (x *OnlinePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePlayer.ProtoReflect.Descriptor instead.
func (*OnlinePlayer) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{7}
}

func (x *OnlinePlayer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *OnlinePlayer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Represents a server a player is online on, proxy and regular.
type OnlineServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ProxyId  string `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
}

func (x *OnlineServer) Reset() {
	*x = OnlineServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_player_tracker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineServer) ProtoMessage() {}

func (x *OnlineServer) ProtoReflect() protoreflect.Message {
	mi := &file_service_player_tracker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineServer.ProtoReflect.Descriptor instead.
func (*OnlineServer) Descriptor() ([]byte, []int) {
	return file_service_player_tracker_proto_rawDescGZIP(), []int{8}
}

func (x *OnlineServer) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *OnlineServer) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

var File_service_player_tracker_proto protoreflect.FileDescriptor

var file_service_player_tracker_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26,
	0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x17, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x8e, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x74, 0x6f,
	0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a,
	0x76, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x0c, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0c,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x49, 0x64, 0x32, 0xf1, 0x06, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x3a, 0x2e, 0x74, 0x6f, 0x77,
	0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x67,
	0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x3a, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x70, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x3f, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74,
	0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40,
	0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x95, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x2e, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x44, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x37, 0x2e,
	0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x59, 0x0a, 0x1b, 0x63, 0x63, 0x2e, 0x74,
	0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x26, 0x74, 0x6f, 0x77,
	0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_player_tracker_proto_rawDescOnce sync.Once
	file_service_player_tracker_proto_rawDescData = file_service_player_tracker_proto_rawDesc
)

func file_service_player_tracker_proto_rawDescGZIP() []byte {
	file_service_player_tracker_proto_rawDescOnce.Do(func() {
		file_service_player_tracker_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_player_tracker_proto_rawDescData)
	})
	return file_service_player_tracker_proto_rawDescData
}

var file_service_player_tracker_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_player_tracker_proto_goTypes = []interface{}{
	(*PlayerLoginRequest)(nil),           // 0: towerdefence.cc.service.player_tracker.PlayerLoginRequest
	(*PlayerDisconnectRequest)(nil),      // 1: towerdefence.cc.service.player_tracker.PlayerDisconnectRequest
	(*GetPlayerServerResponse)(nil),      // 2: towerdefence.cc.service.player_tracker.GetPlayerServerResponse
	(*GetPlayerServersResponse)(nil),     // 3: towerdefence.cc.service.player_tracker.GetPlayerServersResponse
	(*ServerIdRequest)(nil),              // 4: towerdefence.cc.service.player_tracker.ServerIdRequest
	(*GetServerPlayerCountResponse)(nil), // 5: towerdefence.cc.service.player_tracker.GetServerPlayerCountResponse
	(*GetServerPlayersResponse)(nil),     // 6: towerdefence.cc.service.player_tracker.GetServerPlayersResponse
	(*OnlinePlayer)(nil),                 // 7: towerdefence.cc.service.player_tracker.OnlinePlayer
	(*OnlineServer)(nil),                 // 8: towerdefence.cc.service.player_tracker.OnlineServer
	nil,                                  // 9: towerdefence.cc.service.player_tracker.GetPlayerServersResponse.PlayerServersEntry
	(*model.PlayerRequest)(nil),          // 10: towerdefence.cc.model.PlayerRequest
	(*model.PlayersRequest)(nil),         // 11: towerdefence.cc.model.PlayersRequest
	(*emptypb.Empty)(nil),                // 12: google.protobuf.Empty
}
var file_service_player_tracker_proto_depIdxs = []int32{
	8,  // 0: towerdefence.cc.service.player_tracker.GetPlayerServerResponse.server:type_name -> towerdefence.cc.service.player_tracker.OnlineServer
	9,  // 1: towerdefence.cc.service.player_tracker.GetPlayerServersResponse.player_servers:type_name -> towerdefence.cc.service.player_tracker.GetPlayerServersResponse.PlayerServersEntry
	7,  // 2: towerdefence.cc.service.player_tracker.GetServerPlayersResponse.online_players:type_name -> towerdefence.cc.service.player_tracker.OnlinePlayer
	8,  // 3: towerdefence.cc.service.player_tracker.GetPlayerServersResponse.PlayerServersEntry.value:type_name -> towerdefence.cc.service.player_tracker.OnlineServer
	0,  // 4: towerdefence.cc.service.player_tracker.PlayerTracker.ProxyPlayerLogin:input_type -> towerdefence.cc.service.player_tracker.PlayerLoginRequest
	0,  // 5: towerdefence.cc.service.player_tracker.PlayerTracker.ServerPlayerLogin:input_type -> towerdefence.cc.service.player_tracker.PlayerLoginRequest
	1,  // 6: towerdefence.cc.service.player_tracker.PlayerTracker.ProxyPlayerDisconnect:input_type -> towerdefence.cc.service.player_tracker.PlayerDisconnectRequest
	10, // 7: towerdefence.cc.service.player_tracker.PlayerTracker.GetPlayerServer:input_type -> towerdefence.cc.model.PlayerRequest
	11, // 8: towerdefence.cc.service.player_tracker.PlayerTracker.GetPlayerServers:input_type -> towerdefence.cc.model.PlayersRequest
	4,  // 9: towerdefence.cc.service.player_tracker.PlayerTracker.GetServerPlayerCount:input_type -> towerdefence.cc.service.player_tracker.ServerIdRequest
	4,  // 10: towerdefence.cc.service.player_tracker.PlayerTracker.GetServerPlayers:input_type -> towerdefence.cc.service.player_tracker.ServerIdRequest
	12, // 11: towerdefence.cc.service.player_tracker.PlayerTracker.ProxyPlayerLogin:output_type -> google.protobuf.Empty
	12, // 12: towerdefence.cc.service.player_tracker.PlayerTracker.ServerPlayerLogin:output_type -> google.protobuf.Empty
	12, // 13: towerdefence.cc.service.player_tracker.PlayerTracker.ProxyPlayerDisconnect:output_type -> google.protobuf.Empty
	2,  // 14: towerdefence.cc.service.player_tracker.PlayerTracker.GetPlayerServer:output_type -> towerdefence.cc.service.player_tracker.GetPlayerServerResponse
	3,  // 15: towerdefence.cc.service.player_tracker.PlayerTracker.GetPlayerServers:output_type -> towerdefence.cc.service.player_tracker.GetPlayerServersResponse
	5,  // 16: towerdefence.cc.service.player_tracker.PlayerTracker.GetServerPlayerCount:output_type -> towerdefence.cc.service.player_tracker.GetServerPlayerCountResponse
	6,  // 17: towerdefence.cc.service.player_tracker.PlayerTracker.GetServerPlayers:output_type -> towerdefence.cc.service.player_tracker.GetServerPlayersResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_service_player_tracker_proto_init() }
func file_service_player_tracker_proto_init() {
	if File_service_player_tracker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_player_tracker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDisconnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerPlayerCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_player_tracker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_player_tracker_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_player_tracker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_player_tracker_proto_goTypes,
		DependencyIndexes: file_service_player_tracker_proto_depIdxs,
		MessageInfos:      file_service_player_tracker_proto_msgTypes,
	}.Build()
	File_service_player_tracker_proto = out.File
	file_service_player_tracker_proto_rawDesc = nil
	file_service_player_tracker_proto_goTypes = nil
	file_service_player_tracker_proto_depIdxs = nil
}
