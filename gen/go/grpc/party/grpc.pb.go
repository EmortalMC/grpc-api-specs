// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: party/grpc.proto

package party

import (
	common "github.com/emortalmc/proto-specs/gen/go/model/common"
	party "github.com/emortalmc/proto-specs/gen/go/model/party"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyPartyErrorResponse_ErrorType int32

const (
	EmptyPartyErrorResponse_NOT_IN_PARTY EmptyPartyErrorResponse_ErrorType = 0
	EmptyPartyErrorResponse_NOT_LEADER   EmptyPartyErrorResponse_ErrorType = 1
)

// Enum value maps for EmptyPartyErrorResponse_ErrorType.
var (
	EmptyPartyErrorResponse_ErrorType_name = map[int32]string{
		0: "NOT_IN_PARTY",
		1: "NOT_LEADER",
	}
	EmptyPartyErrorResponse_ErrorType_value = map[string]int32{
		"NOT_IN_PARTY": 0,
		"NOT_LEADER":   1,
	}
)

func (x EmptyPartyErrorResponse_ErrorType) Enum() *EmptyPartyErrorResponse_ErrorType {
	p := new(EmptyPartyErrorResponse_ErrorType)
	*p = x
	return p
}

func (x EmptyPartyErrorResponse_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmptyPartyErrorResponse_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_grpc_proto_enumTypes[0].Descriptor()
}

func (EmptyPartyErrorResponse_ErrorType) Type() protoreflect.EnumType {
	return &file_party_grpc_proto_enumTypes[0]
}

func (x EmptyPartyErrorResponse_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmptyPartyErrorResponse_ErrorType.Descriptor instead.
func (EmptyPartyErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{2, 0}
}

type InvitePlayerErrorResponse_ErrorType int32

const (
	InvitePlayerErrorResponse_TARGET_ALREADY_IN_SELF_PARTY    InvitePlayerErrorResponse_ErrorType = 0
	InvitePlayerErrorResponse_TARGET_ALREADY_IN_ANOTHER_PARTY InvitePlayerErrorResponse_ErrorType = 1
	InvitePlayerErrorResponse_TARGET_ALREADY_INVITED          InvitePlayerErrorResponse_ErrorType = 2
	// NO_PERMISSION the issuer is not the leader and AllowMemberInvite is false (more settings may be added later)
	InvitePlayerErrorResponse_NO_PERMISSION InvitePlayerErrorResponse_ErrorType = 4
	// PARTY_IS_OPEN the party is open and anyone can join, no **new** invites can be created
	InvitePlayerErrorResponse_PARTY_IS_OPEN InvitePlayerErrorResponse_ErrorType = 5
)

// Enum value maps for InvitePlayerErrorResponse_ErrorType.
var (
	InvitePlayerErrorResponse_ErrorType_name = map[int32]string{
		0: "TARGET_ALREADY_IN_SELF_PARTY",
		1: "TARGET_ALREADY_IN_ANOTHER_PARTY",
		2: "TARGET_ALREADY_INVITED",
		4: "NO_PERMISSION",
		5: "PARTY_IS_OPEN",
	}
	InvitePlayerErrorResponse_ErrorType_value = map[string]int32{
		"TARGET_ALREADY_IN_SELF_PARTY":    0,
		"TARGET_ALREADY_IN_ANOTHER_PARTY": 1,
		"TARGET_ALREADY_INVITED":          2,
		"NO_PERMISSION":                   4,
		"PARTY_IS_OPEN":                   5,
	}
)

func (x InvitePlayerErrorResponse_ErrorType) Enum() *InvitePlayerErrorResponse_ErrorType {
	p := new(InvitePlayerErrorResponse_ErrorType)
	*p = x
	return p
}

func (x InvitePlayerErrorResponse_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitePlayerErrorResponse_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_grpc_proto_enumTypes[1].Descriptor()
}

func (InvitePlayerErrorResponse_ErrorType) Type() protoreflect.EnumType {
	return &file_party_grpc_proto_enumTypes[1]
}

func (x InvitePlayerErrorResponse_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitePlayerErrorResponse_ErrorType.Descriptor instead.
func (InvitePlayerErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{9, 0}
}

type JoinPartyErrorResponse_ErrorType int32

const (
	JoinPartyErrorResponse_ALREADY_IN_PARTY JoinPartyErrorResponse_ErrorType = 0
	JoinPartyErrorResponse_PARTY_NOT_FOUND  JoinPartyErrorResponse_ErrorType = 1
	JoinPartyErrorResponse_NOT_INVITED      JoinPartyErrorResponse_ErrorType = 2
)

// Enum value maps for JoinPartyErrorResponse_ErrorType.
var (
	JoinPartyErrorResponse_ErrorType_name = map[int32]string{
		0: "ALREADY_IN_PARTY",
		1: "PARTY_NOT_FOUND",
		2: "NOT_INVITED",
	}
	JoinPartyErrorResponse_ErrorType_value = map[string]int32{
		"ALREADY_IN_PARTY": 0,
		"PARTY_NOT_FOUND":  1,
		"NOT_INVITED":      2,
	}
)

func (x JoinPartyErrorResponse_ErrorType) Enum() *JoinPartyErrorResponse_ErrorType {
	p := new(JoinPartyErrorResponse_ErrorType)
	*p = x
	return p
}

func (x JoinPartyErrorResponse_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinPartyErrorResponse_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_grpc_proto_enumTypes[2].Descriptor()
}

func (JoinPartyErrorResponse_ErrorType) Type() protoreflect.EnumType {
	return &file_party_grpc_proto_enumTypes[2]
}

func (x JoinPartyErrorResponse_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinPartyErrorResponse_ErrorType.Descriptor instead.
func (JoinPartyErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{12, 0}
}

type LeavePartyErrorResponse_ErrorType int32

const (
	LeavePartyErrorResponse_NOT_IN_PARTY LeavePartyErrorResponse_ErrorType = 0
	// CANNOT_LEAVE_AS_LEADER you cannot leave if you are the leader of the party.
	// If done by a user, suggest that they disband the party instead or set a new leader.
	LeavePartyErrorResponse_CANNOT_LEAVE_AS_LEADER LeavePartyErrorResponse_ErrorType = 1
)

// Enum value maps for LeavePartyErrorResponse_ErrorType.
var (
	LeavePartyErrorResponse_ErrorType_name = map[int32]string{
		0: "NOT_IN_PARTY",
		1: "CANNOT_LEAVE_AS_LEADER",
	}
	LeavePartyErrorResponse_ErrorType_value = map[string]int32{
		"NOT_IN_PARTY":           0,
		"CANNOT_LEAVE_AS_LEADER": 1,
	}
)

func (x LeavePartyErrorResponse_ErrorType) Enum() *LeavePartyErrorResponse_ErrorType {
	p := new(LeavePartyErrorResponse_ErrorType)
	*p = x
	return p
}

func (x LeavePartyErrorResponse_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeavePartyErrorResponse_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_grpc_proto_enumTypes[3].Descriptor()
}

func (LeavePartyErrorResponse_ErrorType) Type() protoreflect.EnumType {
	return &file_party_grpc_proto_enumTypes[3]
}

func (x LeavePartyErrorResponse_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeavePartyErrorResponse_ErrorType.Descriptor instead.
func (LeavePartyErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{15, 0}
}

type KickPlayerErrorResponse_ErrorType int32

const (
	KickPlayerErrorResponse_TARGET_NOT_IN_PARTY KickPlayerErrorResponse_ErrorType = 0
	KickPlayerErrorResponse_SELF_NOT_IN_PARTY   KickPlayerErrorResponse_ErrorType = 1
	KickPlayerErrorResponse_SELF_NOT_LEADER     KickPlayerErrorResponse_ErrorType = 2
	KickPlayerErrorResponse_TARGET_IS_LEADER    KickPlayerErrorResponse_ErrorType = 3
)

// Enum value maps for KickPlayerErrorResponse_ErrorType.
var (
	KickPlayerErrorResponse_ErrorType_name = map[int32]string{
		0: "TARGET_NOT_IN_PARTY",
		1: "SELF_NOT_IN_PARTY",
		2: "SELF_NOT_LEADER",
		3: "TARGET_IS_LEADER",
	}
	KickPlayerErrorResponse_ErrorType_value = map[string]int32{
		"TARGET_NOT_IN_PARTY": 0,
		"SELF_NOT_IN_PARTY":   1,
		"SELF_NOT_LEADER":     2,
		"TARGET_IS_LEADER":    3,
	}
)

func (x KickPlayerErrorResponse_ErrorType) Enum() *KickPlayerErrorResponse_ErrorType {
	p := new(KickPlayerErrorResponse_ErrorType)
	*p = x
	return p
}

func (x KickPlayerErrorResponse_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KickPlayerErrorResponse_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_grpc_proto_enumTypes[4].Descriptor()
}

func (KickPlayerErrorResponse_ErrorType) Type() protoreflect.EnumType {
	return &file_party_grpc_proto_enumTypes[4]
}

func (x KickPlayerErrorResponse_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KickPlayerErrorResponse_ErrorType.Descriptor instead.
func (KickPlayerErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{18, 0}
}

type SetPartyLeaderErrorResponse_ErrorType int32

const (
	SetPartyLeaderErrorResponse_TARGET_NOT_IN_PARTY SetPartyLeaderErrorResponse_ErrorType = 0
	SetPartyLeaderErrorResponse_SELF_NOT_IN_PARTY   SetPartyLeaderErrorResponse_ErrorType = 1
	SetPartyLeaderErrorResponse_SELF_NOT_LEADER     SetPartyLeaderErrorResponse_ErrorType = 2
)

// Enum value maps for SetPartyLeaderErrorResponse_ErrorType.
var (
	SetPartyLeaderErrorResponse_ErrorType_name = map[int32]string{
		0: "TARGET_NOT_IN_PARTY",
		1: "SELF_NOT_IN_PARTY",
		2: "SELF_NOT_LEADER",
	}
	SetPartyLeaderErrorResponse_ErrorType_value = map[string]int32{
		"TARGET_NOT_IN_PARTY": 0,
		"SELF_NOT_IN_PARTY":   1,
		"SELF_NOT_LEADER":     2,
	}
)

func (x SetPartyLeaderErrorResponse_ErrorType) Enum() *SetPartyLeaderErrorResponse_ErrorType {
	p := new(SetPartyLeaderErrorResponse_ErrorType)
	*p = x
	return p
}

func (x SetPartyLeaderErrorResponse_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPartyLeaderErrorResponse_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_grpc_proto_enumTypes[5].Descriptor()
}

func (SetPartyLeaderErrorResponse_ErrorType) Type() protoreflect.EnumType {
	return &file_party_grpc_proto_enumTypes[5]
}

func (x SetPartyLeaderErrorResponse_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPartyLeaderErrorResponse_ErrorType.Descriptor instead.
func (SetPartyLeaderErrorResponse_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{21, 0}
}

type EmptyPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*EmptyPartyRequest_PartyId
	//	*EmptyPartyRequest_PlayerId
	Id isEmptyPartyRequest_Id `protobuf_oneof:"id"`
}

func (x *EmptyPartyRequest) Reset() {
	*x = EmptyPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyPartyRequest) ProtoMessage() {}

func (x *EmptyPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyPartyRequest.ProtoReflect.Descriptor instead.
func (*EmptyPartyRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{0}
}

func (m *EmptyPartyRequest) GetId() isEmptyPartyRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *EmptyPartyRequest) GetPartyId() string {
	if x, ok := x.GetId().(*EmptyPartyRequest_PartyId); ok {
		return x.PartyId
	}
	return ""
}

func (x *EmptyPartyRequest) GetPlayerId() string {
	if x, ok := x.GetId().(*EmptyPartyRequest_PlayerId); ok {
		return x.PlayerId
	}
	return ""
}

type isEmptyPartyRequest_Id interface {
	isEmptyPartyRequest_Id()
}

type EmptyPartyRequest_PartyId struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof"`
}

type EmptyPartyRequest_PlayerId struct {
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3,oneof"`
}

func (*EmptyPartyRequest_PartyId) isEmptyPartyRequest_Id() {}

func (*EmptyPartyRequest_PlayerId) isEmptyPartyRequest_Id() {}

type EmptyPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyPartyResponse) Reset() {
	*x = EmptyPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyPartyResponse) ProtoMessage() {}

func (x *EmptyPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyPartyResponse.ProtoReflect.Descriptor instead.
func (*EmptyPartyResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{1}
}

type EmptyPartyErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType EmptyPartyErrorResponse_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=emortal.grpc.party.EmptyPartyErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (x *EmptyPartyErrorResponse) Reset() {
	*x = EmptyPartyErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyPartyErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyPartyErrorResponse) ProtoMessage() {}

func (x *EmptyPartyErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyPartyErrorResponse.ProtoReflect.Descriptor instead.
func (*EmptyPartyErrorResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *EmptyPartyErrorResponse) GetErrorType() EmptyPartyErrorResponse_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return EmptyPartyErrorResponse_NOT_IN_PARTY
}

type GetPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*GetPartyRequest_PartyId
	//	*GetPartyRequest_PlayerId
	Id isGetPartyRequest_Id `protobuf_oneof:"id"`
}

func (x *GetPartyRequest) Reset() {
	*x = GetPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyRequest) ProtoMessage() {}

func (x *GetPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyRequest.ProtoReflect.Descriptor instead.
func (*GetPartyRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{3}
}

func (m *GetPartyRequest) GetId() isGetPartyRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *GetPartyRequest) GetPartyId() string {
	if x, ok := x.GetId().(*GetPartyRequest_PartyId); ok {
		return x.PartyId
	}
	return ""
}

func (x *GetPartyRequest) GetPlayerId() string {
	if x, ok := x.GetId().(*GetPartyRequest_PlayerId); ok {
		return x.PlayerId
	}
	return ""
}

type isGetPartyRequest_Id interface {
	isGetPartyRequest_Id()
}

type GetPartyRequest_PartyId struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof"`
}

type GetPartyRequest_PlayerId struct {
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3,oneof"`
}

func (*GetPartyRequest_PartyId) isGetPartyRequest_Id() {}

func (*GetPartyRequest_PlayerId) isGetPartyRequest_Id() {}

type GetPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Party *party.Party `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
}

func (x *GetPartyResponse) Reset() {
	*x = GetPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyResponse) ProtoMessage() {}

func (x *GetPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyResponse.ProtoReflect.Descriptor instead.
func (*GetPartyResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *GetPartyResponse) GetParty() *party.Party {
	if x != nil {
		return x.Party
	}
	return nil
}

type GetPartyInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*GetPartyInvitesRequest_PartyId
	//	*GetPartyInvitesRequest_PlayerId
	Id       isGetPartyInvitesRequest_Id `protobuf_oneof:"id"`
	Pageable *common.Pageable            `protobuf:"bytes,3,opt,name=pageable,proto3" json:"pageable,omitempty"`
}

func (x *GetPartyInvitesRequest) Reset() {
	*x = GetPartyInvitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyInvitesRequest) ProtoMessage() {}

func (x *GetPartyInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyInvitesRequest.ProtoReflect.Descriptor instead.
func (*GetPartyInvitesRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{5}
}

func (m *GetPartyInvitesRequest) GetId() isGetPartyInvitesRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *GetPartyInvitesRequest) GetPartyId() string {
	if x, ok := x.GetId().(*GetPartyInvitesRequest_PartyId); ok {
		return x.PartyId
	}
	return ""
}

func (x *GetPartyInvitesRequest) GetPlayerId() string {
	if x, ok := x.GetId().(*GetPartyInvitesRequest_PlayerId); ok {
		return x.PlayerId
	}
	return ""
}

func (x *GetPartyInvitesRequest) GetPageable() *common.Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

type isGetPartyInvitesRequest_Id interface {
	isGetPartyInvitesRequest_Id()
}

type GetPartyInvitesRequest_PartyId struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof"`
}

type GetPartyInvitesRequest_PlayerId struct {
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3,oneof"`
}

func (*GetPartyInvitesRequest_PartyId) isGetPartyInvitesRequest_Id() {}

func (*GetPartyInvitesRequest_PlayerId) isGetPartyInvitesRequest_Id() {}

type GetPartyInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invites []*party.PartyInvite `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
}

func (x *GetPartyInvitesResponse) Reset() {
	*x = GetPartyInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyInvitesResponse) ProtoMessage() {}

func (x *GetPartyInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyInvitesResponse.ProtoReflect.Descriptor instead.
func (*GetPartyInvitesResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *GetPartyInvitesResponse) GetInvites() []*party.PartyInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type InvitePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// issuer_id of type UUID
	IssuerId       string `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	IssuerUsername string `protobuf:"bytes,2,opt,name=issuer_username,json=issuerUsername,proto3" json:"issuer_username,omitempty"`
	// target_id of type UUID
	TargetId       string `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	TargetUsername string `protobuf:"bytes,4,opt,name=target_username,json=targetUsername,proto3" json:"target_username,omitempty"`
}

func (x *InvitePlayerRequest) Reset() {
	*x = InvitePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerRequest) ProtoMessage() {}

func (x *InvitePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerRequest.ProtoReflect.Descriptor instead.
func (*InvitePlayerRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *InvitePlayerRequest) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *InvitePlayerRequest) GetIssuerUsername() string {
	if x != nil {
		return x.IssuerUsername
	}
	return ""
}

func (x *InvitePlayerRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *InvitePlayerRequest) GetTargetUsername() string {
	if x != nil {
		return x.TargetUsername
	}
	return ""
}

type InvitePlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invite *party.PartyInvite `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
}

func (x *InvitePlayerResponse) Reset() {
	*x = InvitePlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerResponse) ProtoMessage() {}

func (x *InvitePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerResponse.ProtoReflect.Descriptor instead.
func (*InvitePlayerResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *InvitePlayerResponse) GetInvite() *party.PartyInvite {
	if x != nil {
		return x.Invite
	}
	return nil
}

type InvitePlayerErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType InvitePlayerErrorResponse_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=emortal.grpc.party.InvitePlayerErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (x *InvitePlayerErrorResponse) Reset() {
	*x = InvitePlayerErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitePlayerErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerErrorResponse) ProtoMessage() {}

func (x *InvitePlayerErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerErrorResponse.ProtoReflect.Descriptor instead.
func (*InvitePlayerErrorResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *InvitePlayerErrorResponse) GetErrorType() InvitePlayerErrorResponse_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return InvitePlayerErrorResponse_TARGET_ALREADY_IN_SELF_PARTY
}

type JoinPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// player_id of type UUID
	PlayerId       string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerUsername string `protobuf:"bytes,2,opt,name=player_username,json=playerUsername,proto3" json:"player_username,omitempty"`
	// Types that are assignable to Id:
	//
	//	*JoinPartyRequest_PartyId
	//	*JoinPartyRequest_MemberId
	Id isJoinPartyRequest_Id `protobuf_oneof:"id"`
}

func (x *JoinPartyRequest) Reset() {
	*x = JoinPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPartyRequest) ProtoMessage() {}

func (x *JoinPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPartyRequest.ProtoReflect.Descriptor instead.
func (*JoinPartyRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *JoinPartyRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinPartyRequest) GetPlayerUsername() string {
	if x != nil {
		return x.PlayerUsername
	}
	return ""
}

func (m *JoinPartyRequest) GetId() isJoinPartyRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *JoinPartyRequest) GetPartyId() string {
	if x, ok := x.GetId().(*JoinPartyRequest_PartyId); ok {
		return x.PartyId
	}
	return ""
}

func (x *JoinPartyRequest) GetMemberId() string {
	if x, ok := x.GetId().(*JoinPartyRequest_MemberId); ok {
		return x.MemberId
	}
	return ""
}

type isJoinPartyRequest_Id interface {
	isJoinPartyRequest_Id()
}

type JoinPartyRequest_PartyId struct {
	// party_id of type ObjectId
	PartyId string `protobuf:"bytes,3,opt,name=party_id,json=partyId,proto3,oneof"`
}

type JoinPartyRequest_MemberId struct {
	// member_id of type UUID, can be anyone in the party
	MemberId string `protobuf:"bytes,4,opt,name=member_id,json=memberId,proto3,oneof"`
}

func (*JoinPartyRequest_PartyId) isJoinPartyRequest_Id() {}

func (*JoinPartyRequest_MemberId) isJoinPartyRequest_Id() {}

type JoinPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Party *party.Party `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
}

func (x *JoinPartyResponse) Reset() {
	*x = JoinPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPartyResponse) ProtoMessage() {}

func (x *JoinPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPartyResponse.ProtoReflect.Descriptor instead.
func (*JoinPartyResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *JoinPartyResponse) GetParty() *party.Party {
	if x != nil {
		return x.Party
	}
	return nil
}

type JoinPartyErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType JoinPartyErrorResponse_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=emortal.grpc.party.JoinPartyErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (x *JoinPartyErrorResponse) Reset() {
	*x = JoinPartyErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPartyErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPartyErrorResponse) ProtoMessage() {}

func (x *JoinPartyErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPartyErrorResponse.ProtoReflect.Descriptor instead.
func (*JoinPartyErrorResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *JoinPartyErrorResponse) GetErrorType() JoinPartyErrorResponse_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return JoinPartyErrorResponse_ALREADY_IN_PARTY
}

type LeavePartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// player_id of type UUID
	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *LeavePartyRequest) Reset() {
	*x = LeavePartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePartyRequest) ProtoMessage() {}

func (x *LeavePartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePartyRequest.ProtoReflect.Descriptor instead.
func (*LeavePartyRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *LeavePartyRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type LeavePartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeavePartyResponse) Reset() {
	*x = LeavePartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePartyResponse) ProtoMessage() {}

func (x *LeavePartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePartyResponse.ProtoReflect.Descriptor instead.
func (*LeavePartyResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{14}
}

type LeavePartyErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType LeavePartyErrorResponse_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=emortal.grpc.party.LeavePartyErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (x *LeavePartyErrorResponse) Reset() {
	*x = LeavePartyErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeavePartyErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePartyErrorResponse) ProtoMessage() {}

func (x *LeavePartyErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePartyErrorResponse.ProtoReflect.Descriptor instead.
func (*LeavePartyErrorResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *LeavePartyErrorResponse) GetErrorType() LeavePartyErrorResponse_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return LeavePartyErrorResponse_NOT_IN_PARTY
}

type KickPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// issuer_id of type UUID
	IssuerId       string `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	IssuerUsername string `protobuf:"bytes,2,opt,name=issuer_username,json=issuerUsername,proto3" json:"issuer_username,omitempty"`
	// target_id of type UUID
	TargetId string `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *KickPlayerRequest) Reset() {
	*x = KickPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerRequest) ProtoMessage() {}

func (x *KickPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerRequest.ProtoReflect.Descriptor instead.
func (*KickPlayerRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *KickPlayerRequest) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *KickPlayerRequest) GetIssuerUsername() string {
	if x != nil {
		return x.IssuerUsername
	}
	return ""
}

func (x *KickPlayerRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type KickPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickPlayerResponse) Reset() {
	*x = KickPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerResponse) ProtoMessage() {}

func (x *KickPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerResponse.ProtoReflect.Descriptor instead.
func (*KickPlayerResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{17}
}

type KickPlayerErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType KickPlayerErrorResponse_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=emortal.grpc.party.KickPlayerErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (x *KickPlayerErrorResponse) Reset() {
	*x = KickPlayerErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickPlayerErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerErrorResponse) ProtoMessage() {}

func (x *KickPlayerErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerErrorResponse.ProtoReflect.Descriptor instead.
func (*KickPlayerErrorResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *KickPlayerErrorResponse) GetErrorType() KickPlayerErrorResponse_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return KickPlayerErrorResponse_TARGET_NOT_IN_PARTY
}

type SetPartyLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// issuer_id of type UUID
	IssuerId       string `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	IssuerUsername string `protobuf:"bytes,2,opt,name=issuer_username,json=issuerUsername,proto3" json:"issuer_username,omitempty"`
	// target_id of type UUID
	TargetId string `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *SetPartyLeaderRequest) Reset() {
	*x = SetPartyLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPartyLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPartyLeaderRequest) ProtoMessage() {}

func (x *SetPartyLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPartyLeaderRequest.ProtoReflect.Descriptor instead.
func (*SetPartyLeaderRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *SetPartyLeaderRequest) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *SetPartyLeaderRequest) GetIssuerUsername() string {
	if x != nil {
		return x.IssuerUsername
	}
	return ""
}

func (x *SetPartyLeaderRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type SetPartyLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPartyLeaderResponse) Reset() {
	*x = SetPartyLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPartyLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPartyLeaderResponse) ProtoMessage() {}

func (x *SetPartyLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPartyLeaderResponse.ProtoReflect.Descriptor instead.
func (*SetPartyLeaderResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{20}
}

type SetPartyLeaderErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType SetPartyLeaderErrorResponse_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=emortal.grpc.party.SetPartyLeaderErrorResponse_ErrorType" json:"error_type,omitempty"`
}

func (x *SetPartyLeaderErrorResponse) Reset() {
	*x = SetPartyLeaderErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPartyLeaderErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPartyLeaderErrorResponse) ProtoMessage() {}

func (x *SetPartyLeaderErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPartyLeaderErrorResponse.ProtoReflect.Descriptor instead.
func (*SetPartyLeaderErrorResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{21}
}

func (x *SetPartyLeaderErrorResponse) GetErrorType() SetPartyLeaderErrorResponse_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return SetPartyLeaderErrorResponse_TARGET_NOT_IN_PARTY
}

type GetPartySettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Id:
	//
	//	*GetPartySettingsRequest_PartyId
	//	*GetPartySettingsRequest_PlayerId
	Id isGetPartySettingsRequest_Id `protobuf_oneof:"id"`
}

func (x *GetPartySettingsRequest) Reset() {
	*x = GetPartySettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartySettingsRequest) ProtoMessage() {}

func (x *GetPartySettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartySettingsRequest.ProtoReflect.Descriptor instead.
func (*GetPartySettingsRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{22}
}

func (m *GetPartySettingsRequest) GetId() isGetPartySettingsRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *GetPartySettingsRequest) GetPartyId() string {
	if x, ok := x.GetId().(*GetPartySettingsRequest_PartyId); ok {
		return x.PartyId
	}
	return ""
}

func (x *GetPartySettingsRequest) GetPlayerId() string {
	if x, ok := x.GetId().(*GetPartySettingsRequest_PlayerId); ok {
		return x.PlayerId
	}
	return ""
}

type isGetPartySettingsRequest_Id interface {
	isGetPartySettingsRequest_Id()
}

type GetPartySettingsRequest_PartyId struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof"`
}

type GetPartySettingsRequest_PlayerId struct {
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3,oneof"`
}

func (*GetPartySettingsRequest_PartyId) isGetPartySettingsRequest_Id() {}

func (*GetPartySettingsRequest_PlayerId) isGetPartySettingsRequest_Id() {}

type GetPartySettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *party.PartySettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetPartySettingsResponse) Reset() {
	*x = GetPartySettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartySettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartySettingsResponse) ProtoMessage() {}

func (x *GetPartySettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartySettingsResponse.ProtoReflect.Descriptor instead.
func (*GetPartySettingsResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *GetPartySettingsResponse) GetSettings() *party.PartySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdatePartySettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// issuer_id of type UUID
	IssuerId            string `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	DequeueOnDisconnect *bool  `protobuf:"varint,2,opt,name=dequeue_on_disconnect,json=dequeueOnDisconnect,proto3,oneof" json:"dequeue_on_disconnect,omitempty"`
	AllowMemberDequeue  *bool  `protobuf:"varint,3,opt,name=allow_member_dequeue,json=allowMemberDequeue,proto3,oneof" json:"allow_member_dequeue,omitempty"`
	AllowMemberInvite   *bool  `protobuf:"varint,4,opt,name=allow_member_invite,json=allowMemberInvite,proto3,oneof" json:"allow_member_invite,omitempty"`
	Open                *bool  `protobuf:"varint,5,opt,name=open,proto3,oneof" json:"open,omitempty"`
}

func (x *UpdatePartySettingsRequest) Reset() {
	*x = UpdatePartySettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartySettingsRequest) ProtoMessage() {}

func (x *UpdatePartySettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartySettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdatePartySettingsRequest) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *UpdatePartySettingsRequest) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *UpdatePartySettingsRequest) GetDequeueOnDisconnect() bool {
	if x != nil && x.DequeueOnDisconnect != nil {
		return *x.DequeueOnDisconnect
	}
	return false
}

func (x *UpdatePartySettingsRequest) GetAllowMemberDequeue() bool {
	if x != nil && x.AllowMemberDequeue != nil {
		return *x.AllowMemberDequeue
	}
	return false
}

func (x *UpdatePartySettingsRequest) GetAllowMemberInvite() bool {
	if x != nil && x.AllowMemberInvite != nil {
		return *x.AllowMemberInvite
	}
	return false
}

func (x *UpdatePartySettingsRequest) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return false
}

type UpdatePartySettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePartySettingsResponse) Reset() {
	*x = UpdatePartySettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartySettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartySettingsResponse) ProtoMessage() {}

func (x *UpdatePartySettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartySettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdatePartySettingsResponse) Descriptor() ([]byte, []int) {
	return file_party_grpc_proto_rawDescGZIP(), []int{25}
}

var File_party_grpc_proto protoreflect.FileDescriptor

var file_party_grpc_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x1a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x55, 0x0a, 0x11, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a,
	0x17, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x65,
	0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4e,
	0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x22, 0x53, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x42, 0x04, 0x0a, 0x02,
	0x69, 0x64, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x73, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x19, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x65, 0x6d, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x54,
	0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e,
	0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x23, 0x0a,
	0x1f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x49, 0x4e, 0x5f, 0x41, 0x4e, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x49, 0x53, 0x5f, 0x4f, 0x50,
	0x45, 0x4e, 0x10, 0x05, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x42, 0x04, 0x0a, 0x02, 0x69,
	0x64, 0x22, 0x45, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x4a, 0x6f, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50,
	0x41, 0x52, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x22, 0x30, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x17, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x65, 0x6d, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x09, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41,
	0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x41, 0x53, 0x5f, 0x4c, 0x45,
	0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x22, 0x76, 0x0a, 0x11, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x17, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54,
	0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x52, 0x47,
	0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x03, 0x22, 0x7a,
	0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x50,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52,
	0x54, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x45, 0x4c, 0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x02,
	0x22, 0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6d,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xcb, 0x02, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x15, 0x64, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4f,
	0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35,
	0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x12,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x02, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x64, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x06, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65,
	0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x23, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x2a, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x27, 0x2e,
	0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12,
	0x24, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x65,
	0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x65, 0x6d,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x29,
	0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6d, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x81, 0x02, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x2b, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x78, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5c, 0x0a, 0x1a, 0x64,
	0x65, 0x76, 0x2e, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x42, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x6d, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_party_grpc_proto_rawDescOnce sync.Once
	file_party_grpc_proto_rawDescData = file_party_grpc_proto_rawDesc
)

func file_party_grpc_proto_rawDescGZIP() []byte {
	file_party_grpc_proto_rawDescOnce.Do(func() {
		file_party_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_party_grpc_proto_rawDescData)
	})
	return file_party_grpc_proto_rawDescData
}

var file_party_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_party_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_party_grpc_proto_goTypes = []interface{}{
	(EmptyPartyErrorResponse_ErrorType)(0),     // 0: emortal.grpc.party.EmptyPartyErrorResponse.ErrorType
	(InvitePlayerErrorResponse_ErrorType)(0),   // 1: emortal.grpc.party.InvitePlayerErrorResponse.ErrorType
	(JoinPartyErrorResponse_ErrorType)(0),      // 2: emortal.grpc.party.JoinPartyErrorResponse.ErrorType
	(LeavePartyErrorResponse_ErrorType)(0),     // 3: emortal.grpc.party.LeavePartyErrorResponse.ErrorType
	(KickPlayerErrorResponse_ErrorType)(0),     // 4: emortal.grpc.party.KickPlayerErrorResponse.ErrorType
	(SetPartyLeaderErrorResponse_ErrorType)(0), // 5: emortal.grpc.party.SetPartyLeaderErrorResponse.ErrorType
	(*EmptyPartyRequest)(nil),                  // 6: emortal.grpc.party.EmptyPartyRequest
	(*EmptyPartyResponse)(nil),                 // 7: emortal.grpc.party.EmptyPartyResponse
	(*EmptyPartyErrorResponse)(nil),            // 8: emortal.grpc.party.EmptyPartyErrorResponse
	(*GetPartyRequest)(nil),                    // 9: emortal.grpc.party.GetPartyRequest
	(*GetPartyResponse)(nil),                   // 10: emortal.grpc.party.GetPartyResponse
	(*GetPartyInvitesRequest)(nil),             // 11: emortal.grpc.party.GetPartyInvitesRequest
	(*GetPartyInvitesResponse)(nil),            // 12: emortal.grpc.party.GetPartyInvitesResponse
	(*InvitePlayerRequest)(nil),                // 13: emortal.grpc.party.InvitePlayerRequest
	(*InvitePlayerResponse)(nil),               // 14: emortal.grpc.party.InvitePlayerResponse
	(*InvitePlayerErrorResponse)(nil),          // 15: emortal.grpc.party.InvitePlayerErrorResponse
	(*JoinPartyRequest)(nil),                   // 16: emortal.grpc.party.JoinPartyRequest
	(*JoinPartyResponse)(nil),                  // 17: emortal.grpc.party.JoinPartyResponse
	(*JoinPartyErrorResponse)(nil),             // 18: emortal.grpc.party.JoinPartyErrorResponse
	(*LeavePartyRequest)(nil),                  // 19: emortal.grpc.party.LeavePartyRequest
	(*LeavePartyResponse)(nil),                 // 20: emortal.grpc.party.LeavePartyResponse
	(*LeavePartyErrorResponse)(nil),            // 21: emortal.grpc.party.LeavePartyErrorResponse
	(*KickPlayerRequest)(nil),                  // 22: emortal.grpc.party.KickPlayerRequest
	(*KickPlayerResponse)(nil),                 // 23: emortal.grpc.party.KickPlayerResponse
	(*KickPlayerErrorResponse)(nil),            // 24: emortal.grpc.party.KickPlayerErrorResponse
	(*SetPartyLeaderRequest)(nil),              // 25: emortal.grpc.party.SetPartyLeaderRequest
	(*SetPartyLeaderResponse)(nil),             // 26: emortal.grpc.party.SetPartyLeaderResponse
	(*SetPartyLeaderErrorResponse)(nil),        // 27: emortal.grpc.party.SetPartyLeaderErrorResponse
	(*GetPartySettingsRequest)(nil),            // 28: emortal.grpc.party.GetPartySettingsRequest
	(*GetPartySettingsResponse)(nil),           // 29: emortal.grpc.party.GetPartySettingsResponse
	(*UpdatePartySettingsRequest)(nil),         // 30: emortal.grpc.party.UpdatePartySettingsRequest
	(*UpdatePartySettingsResponse)(nil),        // 31: emortal.grpc.party.UpdatePartySettingsResponse
	(*party.Party)(nil),                        // 32: emortal.model.party.Party
	(*common.Pageable)(nil),                    // 33: emortal.model.Pageable
	(*party.PartyInvite)(nil),                  // 34: emortal.model.party.PartyInvite
	(*party.PartySettings)(nil),                // 35: emortal.model.party.PartySettings
}
var file_party_grpc_proto_depIdxs = []int32{
	0,  // 0: emortal.grpc.party.EmptyPartyErrorResponse.error_type:type_name -> emortal.grpc.party.EmptyPartyErrorResponse.ErrorType
	32, // 1: emortal.grpc.party.GetPartyResponse.party:type_name -> emortal.model.party.Party
	33, // 2: emortal.grpc.party.GetPartyInvitesRequest.pageable:type_name -> emortal.model.Pageable
	34, // 3: emortal.grpc.party.GetPartyInvitesResponse.invites:type_name -> emortal.model.party.PartyInvite
	34, // 4: emortal.grpc.party.InvitePlayerResponse.invite:type_name -> emortal.model.party.PartyInvite
	1,  // 5: emortal.grpc.party.InvitePlayerErrorResponse.error_type:type_name -> emortal.grpc.party.InvitePlayerErrorResponse.ErrorType
	32, // 6: emortal.grpc.party.JoinPartyResponse.party:type_name -> emortal.model.party.Party
	2,  // 7: emortal.grpc.party.JoinPartyErrorResponse.error_type:type_name -> emortal.grpc.party.JoinPartyErrorResponse.ErrorType
	3,  // 8: emortal.grpc.party.LeavePartyErrorResponse.error_type:type_name -> emortal.grpc.party.LeavePartyErrorResponse.ErrorType
	4,  // 9: emortal.grpc.party.KickPlayerErrorResponse.error_type:type_name -> emortal.grpc.party.KickPlayerErrorResponse.ErrorType
	5,  // 10: emortal.grpc.party.SetPartyLeaderErrorResponse.error_type:type_name -> emortal.grpc.party.SetPartyLeaderErrorResponse.ErrorType
	35, // 11: emortal.grpc.party.GetPartySettingsResponse.settings:type_name -> emortal.model.party.PartySettings
	6,  // 12: emortal.grpc.party.PartyService.EmptyParty:input_type -> emortal.grpc.party.EmptyPartyRequest
	9,  // 13: emortal.grpc.party.PartyService.GetParty:input_type -> emortal.grpc.party.GetPartyRequest
	11, // 14: emortal.grpc.party.PartyService.GetPartyInvites:input_type -> emortal.grpc.party.GetPartyInvitesRequest
	13, // 15: emortal.grpc.party.PartyService.InvitePlayer:input_type -> emortal.grpc.party.InvitePlayerRequest
	16, // 16: emortal.grpc.party.PartyService.JoinParty:input_type -> emortal.grpc.party.JoinPartyRequest
	19, // 17: emortal.grpc.party.PartyService.LeaveParty:input_type -> emortal.grpc.party.LeavePartyRequest
	22, // 18: emortal.grpc.party.PartyService.KickPlayer:input_type -> emortal.grpc.party.KickPlayerRequest
	25, // 19: emortal.grpc.party.PartyService.SetPartyLeader:input_type -> emortal.grpc.party.SetPartyLeaderRequest
	28, // 20: emortal.grpc.party.PartySettingsService.GetPartySettings:input_type -> emortal.grpc.party.GetPartySettingsRequest
	30, // 21: emortal.grpc.party.PartySettingsService.UpdatePartySettings:input_type -> emortal.grpc.party.UpdatePartySettingsRequest
	7,  // 22: emortal.grpc.party.PartyService.EmptyParty:output_type -> emortal.grpc.party.EmptyPartyResponse
	10, // 23: emortal.grpc.party.PartyService.GetParty:output_type -> emortal.grpc.party.GetPartyResponse
	12, // 24: emortal.grpc.party.PartyService.GetPartyInvites:output_type -> emortal.grpc.party.GetPartyInvitesResponse
	14, // 25: emortal.grpc.party.PartyService.InvitePlayer:output_type -> emortal.grpc.party.InvitePlayerResponse
	17, // 26: emortal.grpc.party.PartyService.JoinParty:output_type -> emortal.grpc.party.JoinPartyResponse
	20, // 27: emortal.grpc.party.PartyService.LeaveParty:output_type -> emortal.grpc.party.LeavePartyResponse
	23, // 28: emortal.grpc.party.PartyService.KickPlayer:output_type -> emortal.grpc.party.KickPlayerResponse
	26, // 29: emortal.grpc.party.PartyService.SetPartyLeader:output_type -> emortal.grpc.party.SetPartyLeaderResponse
	29, // 30: emortal.grpc.party.PartySettingsService.GetPartySettings:output_type -> emortal.grpc.party.GetPartySettingsResponse
	31, // 31: emortal.grpc.party.PartySettingsService.UpdatePartySettings:output_type -> emortal.grpc.party.UpdatePartySettingsResponse
	22, // [22:32] is the sub-list for method output_type
	12, // [12:22] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_party_grpc_proto_init() }
func file_party_grpc_proto_init() {
	if File_party_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_party_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyPartyErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyInvitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitePlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitePlayerErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPartyErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeavePartyErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickPlayerErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPartyLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPartyLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPartyLeaderErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartySettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartySettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartySettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartySettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_party_grpc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*EmptyPartyRequest_PartyId)(nil),
		(*EmptyPartyRequest_PlayerId)(nil),
	}
	file_party_grpc_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetPartyRequest_PartyId)(nil),
		(*GetPartyRequest_PlayerId)(nil),
	}
	file_party_grpc_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetPartyInvitesRequest_PartyId)(nil),
		(*GetPartyInvitesRequest_PlayerId)(nil),
	}
	file_party_grpc_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*JoinPartyRequest_PartyId)(nil),
		(*JoinPartyRequest_MemberId)(nil),
	}
	file_party_grpc_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*GetPartySettingsRequest_PartyId)(nil),
		(*GetPartySettingsRequest_PlayerId)(nil),
	}
	file_party_grpc_proto_msgTypes[24].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_party_grpc_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_party_grpc_proto_goTypes,
		DependencyIndexes: file_party_grpc_proto_depIdxs,
		EnumInfos:         file_party_grpc_proto_enumTypes,
		MessageInfos:      file_party_grpc_proto_msgTypes,
	}.Build()
	File_party_grpc_proto = out.File
	file_party_grpc_proto_rawDesc = nil
	file_party_grpc_proto_goTypes = nil
	file_party_grpc_proto_depIdxs = nil
}
