// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: game_tracker/game_tracker.proto

package game_tracker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mode int32

const (
	Mode_TowerDefenceGame Mode = 0
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "TowerDefenceGame",
	}
	Mode_value = map[string]int32{
		"TowerDefenceGame": 0,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_game_tracker_game_tracker_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_game_tracker_game_tracker_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{0}
}

type HistoricGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Mode   Mode   `protobuf:"varint,2,opt,name=mode,proto3,enum=towerdefence.cc.service.game_tracker.Mode" json:"mode,omitempty"`
	// Types that are assignable to GameType:
	//
	//	*HistoricGame_TowerDefence
	GameType isHistoricGame_GameType `protobuf_oneof:"game_type"`
}

func (x *HistoricGame) Reset() {
	*x = HistoricGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoricGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricGame) ProtoMessage() {}

func (x *HistoricGame) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricGame.ProtoReflect.Descriptor instead.
func (*HistoricGame) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{0}
}

func (x *HistoricGame) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *HistoricGame) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_TowerDefenceGame
}

func (m *HistoricGame) GetGameType() isHistoricGame_GameType {
	if m != nil {
		return m.GameType
	}
	return nil
}

func (x *HistoricGame) GetTowerDefence() *HistoricTowerDefenceGame {
	if x, ok := x.GetGameType().(*HistoricGame_TowerDefence); ok {
		return x.TowerDefence
	}
	return nil
}

type isHistoricGame_GameType interface {
	isHistoricGame_GameType()
}

type HistoricGame_TowerDefence struct {
	TowerDefence *HistoricTowerDefenceGame `protobuf:"bytes,3,opt,name=tower_defence,json=towerDefence,proto3,oneof"`
}

func (*HistoricGame_TowerDefence) isHistoricGame_GameType() {}

type LiveGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Mode   Mode   `protobuf:"varint,2,opt,name=mode,proto3,enum=towerdefence.cc.service.game_tracker.Mode" json:"mode,omitempty"`
	// Types that are assignable to GameType:
	//
	//	*LiveGame_TowerDefence
	GameType isLiveGame_GameType `protobuf_oneof:"game_type"`
}

func (x *LiveGame) Reset() {
	*x = LiveGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveGame) ProtoMessage() {}

func (x *LiveGame) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveGame.ProtoReflect.Descriptor instead.
func (*LiveGame) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{1}
}

func (x *LiveGame) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *LiveGame) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_TowerDefenceGame
}

func (m *LiveGame) GetGameType() isLiveGame_GameType {
	if m != nil {
		return m.GameType
	}
	return nil
}

func (x *LiveGame) GetTowerDefence() *LiveTowerDefenceGame {
	if x, ok := x.GetGameType().(*LiveGame_TowerDefence); ok {
		return x.TowerDefence
	}
	return nil
}

type isLiveGame_GameType interface {
	isLiveGame_GameType()
}

type LiveGame_TowerDefence struct {
	TowerDefence *LiveTowerDefenceGame `protobuf:"bytes,3,opt,name=tower_defence,json=towerDefence,proto3,oneof"`
}

func (*LiveGame_TowerDefence) isLiveGame_GameType() {}

type LiveTowerDefenceGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedHealth  uint32   `protobuf:"varint,1,opt,name=red_health,json=redHealth,proto3" json:"red_health,omitempty"`
	BlueHealth uint32   `protobuf:"varint,2,opt,name=blue_health,json=blueHealth,proto3" json:"blue_health,omitempty"`
	PlayerIds  []string `protobuf:"bytes,3,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
}

func (x *LiveTowerDefenceGame) Reset() {
	*x = LiveTowerDefenceGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveTowerDefenceGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveTowerDefenceGame) ProtoMessage() {}

func (x *LiveTowerDefenceGame) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveTowerDefenceGame.ProtoReflect.Descriptor instead.
func (*LiveTowerDefenceGame) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{2}
}

func (x *LiveTowerDefenceGame) GetRedHealth() uint32 {
	if x != nil {
		return x.RedHealth
	}
	return 0
}

func (x *LiveTowerDefenceGame) GetBlueHealth() uint32 {
	if x != nil {
		return x.BlueHealth
	}
	return 0
}

func (x *LiveTowerDefenceGame) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type HistoricTowerDefenceGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedHealth  uint32   `protobuf:"varint,1,opt,name=red_health,json=redHealth,proto3" json:"red_health,omitempty"`
	BlueHealth uint32   `protobuf:"varint,2,opt,name=blue_health,json=blueHealth,proto3" json:"blue_health,omitempty"`
	PlayerIds  []string `protobuf:"bytes,3,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
}

func (x *HistoricTowerDefenceGame) Reset() {
	*x = HistoricTowerDefenceGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoricTowerDefenceGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricTowerDefenceGame) ProtoMessage() {}

func (x *HistoricTowerDefenceGame) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricTowerDefenceGame.ProtoReflect.Descriptor instead.
func (*HistoricTowerDefenceGame) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{3}
}

func (x *HistoricTowerDefenceGame) GetRedHealth() uint32 {
	if x != nil {
		return x.RedHealth
	}
	return 0
}

func (x *HistoricTowerDefenceGame) GetBlueHealth() uint32 {
	if x != nil {
		return x.BlueHealth
	}
	return 0
}

func (x *HistoricTowerDefenceGame) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type PlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *PlayerRequest) Reset() {
	*x = PlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRequest) ProtoMessage() {}

func (x *PlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRequest.ProtoReflect.Descriptor instead.
func (*PlayerRequest) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type PagedPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Page     uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PagedPlayerRequest) Reset() {
	*x = PagedPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedPlayerRequest) ProtoMessage() {}

func (x *PagedPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedPlayerRequest.ProtoReflect.Descriptor instead.
func (*PagedPlayerRequest) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{5}
}

func (x *PagedPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PagedPlayerRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PagedPlayerRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PlayerGameHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          uint32          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32          `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPages    uint32          `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalElements uint32          `protobuf:"varint,4,opt,name=total_elements,json=totalElements,proto3" json:"total_elements,omitempty"`
	Games         []*HistoricGame `protobuf:"bytes,5,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *PlayerGameHistoryResponse) Reset() {
	*x = PlayerGameHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_tracker_game_tracker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerGameHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGameHistoryResponse) ProtoMessage() {}

func (x *PlayerGameHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_tracker_game_tracker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGameHistoryResponse.ProtoReflect.Descriptor instead.
func (*PlayerGameHistoryResponse) Descriptor() ([]byte, []int) {
	return file_game_tracker_game_tracker_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerGameHistoryResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PlayerGameHistoryResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PlayerGameHistoryResponse) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PlayerGameHistoryResponse) GetTotalElements() uint32 {
	if x != nil {
		return x.TotalElements
	}
	return 0
}

func (x *PlayerGameHistoryResponse) GetGames() []*HistoricGame {
	if x != nil {
		return x.Games
	}
	return nil
}

var File_game_tracker_game_tracker_proto protoreflect.FileDescriptor

var file_game_tracker_game_tracker_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x24, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x22, 0xdb, 0x01, 0x0a, 0x0c, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x65, 0x0a, 0x0d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x65, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x76, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x61, 0x0a, 0x0d, 0x74,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x14, 0x4c,
	0x69, 0x76, 0x65, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x64, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6c, 0x75, 0x65, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x79, 0x0a, 0x18, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6c, 0x75, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a,
	0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x12, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xde, 0x01, 0x0a, 0x19, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x2a, 0x1c, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x6f, 0x77, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x32, 0x9f,
	0x02, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x93,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3f, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x2e, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x00,
	0x42, 0x45, 0x0a, 0x1b, 0x63, 0x63, 0x2e, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x64, 0x65, 0x66, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x10, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x5a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_tracker_game_tracker_proto_rawDescOnce sync.Once
	file_game_tracker_game_tracker_proto_rawDescData = file_game_tracker_game_tracker_proto_rawDesc
)

func file_game_tracker_game_tracker_proto_rawDescGZIP() []byte {
	file_game_tracker_game_tracker_proto_rawDescOnce.Do(func() {
		file_game_tracker_game_tracker_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_tracker_game_tracker_proto_rawDescData)
	})
	return file_game_tracker_game_tracker_proto_rawDescData
}

var file_game_tracker_game_tracker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_game_tracker_game_tracker_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_game_tracker_game_tracker_proto_goTypes = []interface{}{
	(Mode)(0),                         // 0: towerdefence.cc.service.game_tracker.Mode
	(*HistoricGame)(nil),              // 1: towerdefence.cc.service.game_tracker.HistoricGame
	(*LiveGame)(nil),                  // 2: towerdefence.cc.service.game_tracker.LiveGame
	(*LiveTowerDefenceGame)(nil),      // 3: towerdefence.cc.service.game_tracker.LiveTowerDefenceGame
	(*HistoricTowerDefenceGame)(nil),  // 4: towerdefence.cc.service.game_tracker.HistoricTowerDefenceGame
	(*PlayerRequest)(nil),             // 5: towerdefence.cc.service.game_tracker.PlayerRequest
	(*PagedPlayerRequest)(nil),        // 6: towerdefence.cc.service.game_tracker.PagedPlayerRequest
	(*PlayerGameHistoryResponse)(nil), // 7: towerdefence.cc.service.game_tracker.PlayerGameHistoryResponse
}
var file_game_tracker_game_tracker_proto_depIdxs = []int32{
	0, // 0: towerdefence.cc.service.game_tracker.HistoricGame.mode:type_name -> towerdefence.cc.service.game_tracker.Mode
	4, // 1: towerdefence.cc.service.game_tracker.HistoricGame.tower_defence:type_name -> towerdefence.cc.service.game_tracker.HistoricTowerDefenceGame
	0, // 2: towerdefence.cc.service.game_tracker.LiveGame.mode:type_name -> towerdefence.cc.service.game_tracker.Mode
	3, // 3: towerdefence.cc.service.game_tracker.LiveGame.tower_defence:type_name -> towerdefence.cc.service.game_tracker.LiveTowerDefenceGame
	1, // 4: towerdefence.cc.service.game_tracker.PlayerGameHistoryResponse.games:type_name -> towerdefence.cc.service.game_tracker.HistoricGame
	6, // 5: towerdefence.cc.service.game_tracker.GameTracker.GetPlayerGameHistory:input_type -> towerdefence.cc.service.game_tracker.PagedPlayerRequest
	5, // 6: towerdefence.cc.service.game_tracker.GameTracker.GetPlayerLiveGame:input_type -> towerdefence.cc.service.game_tracker.PlayerRequest
	7, // 7: towerdefence.cc.service.game_tracker.GameTracker.GetPlayerGameHistory:output_type -> towerdefence.cc.service.game_tracker.PlayerGameHistoryResponse
	2, // 8: towerdefence.cc.service.game_tracker.GameTracker.GetPlayerLiveGame:output_type -> towerdefence.cc.service.game_tracker.LiveGame
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_game_tracker_game_tracker_proto_init() }
func file_game_tracker_game_tracker_proto_init() {
	if File_game_tracker_game_tracker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_tracker_game_tracker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoricGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_tracker_game_tracker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_tracker_game_tracker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveTowerDefenceGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_tracker_game_tracker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoricTowerDefenceGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_tracker_game_tracker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_tracker_game_tracker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_tracker_game_tracker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerGameHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_game_tracker_game_tracker_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*HistoricGame_TowerDefence)(nil),
	}
	file_game_tracker_game_tracker_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LiveGame_TowerDefence)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_tracker_game_tracker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_tracker_game_tracker_proto_goTypes,
		DependencyIndexes: file_game_tracker_game_tracker_proto_depIdxs,
		EnumInfos:         file_game_tracker_game_tracker_proto_enumTypes,
		MessageInfos:      file_game_tracker_game_tracker_proto_msgTypes,
	}.Build()
	File_game_tracker_game_tracker_proto = out.File
	file_game_tracker_game_tracker_proto_rawDesc = nil
	file_game_tracker_game_tracker_proto_goTypes = nil
	file_game_tracker_game_tracker_proto_depIdxs = nil
}
